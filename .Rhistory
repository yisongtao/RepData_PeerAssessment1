source("http://bioconductor.org/biocLite.R")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rhdf5)
create = h5createFile("example.h5")
create
create = h5createGroup("example.h5","foo")
create = h5createGroup("example.h5","baa")
create = h5createGroup("example.h5","foo/foobaa")
h5ls("example.h5")
A = matrix(1:10, nr=5, nc=2)
h5write(A, "example.h5", "foo/A")
B = array(seq(0.1, 2.0, by=0.1), dim=(5,2,2))
B = array(seq(0.1, 2.0, by=0.1), dim=c(5,2,2))
attr(B,"scale") <- "liter"
h5write(B,"example.h5","foo/foobaa/B")
h5ls("example.h5")
df = data.frame(1L:5L, seq(0,1,length.out = 5), c("ab","cde","fghi","a","s"), stringsAsFactors = FALSE)
h5write(df, "example.h5","df")
h5ls("example.h5")
readdf = h5read("example.h5","df")
readdf
h5write(c(12,13,15),"example.h5","foo/A", index=list(1:3,2))
h5read("example.h5","foo/A")
q()
install.packages("ggplot2")
install.packages("lattice")
library (nlme)
library (lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library (datasets)
data("airquality")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library (lattice)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot
qplot()
library (ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
install.packages("knitr")
install.packages("markdown")
install.packages("slidify")
install.packages("xtable")
q()
setwd("~/Coursera/ReproducibleResearch/RepData_PeerAssessment1")
activity <- read.csv("activity.csv", header = TRUE)
for (i in 1:17568){
if (as.integer(activity[i,"interval"]) < 10) {
activity[i, "interval"] = paste ("000", as.character(activity[i, "interval"]), sep="")
}
else if (as.integer(activity[i,"interval"]) < 100) {
activity[i, "interval"] = paste ("00", as.character(activity[i, "interval"]), sep="")
}
else if (as.integer(activity[i,"interval"]) < 1000) {
activity[i, "interval"] = paste ("0", as.character(activity[i, "interval"]), sep="")
}
else {
activity[i, "interval"] =as.character(activity[i, "interval"])
}
}
activity$date <- as.Date(activity$date, format = "%Y-%m-%d")
str(activity)
data1 <- activity[1,]
for (i in levels(as.factor(activity$interval))) {
data <- activity[as.factor(activity$interval)==i,]
library(plyr)
fill.missing <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))
dat2 <- sapply(data, function(x){
if(is.numeric(x)){
fill.missing(x)
} else {
x
}
}
)
data2 <- data.frame(dat2)
data1 <- rbind(data1,data2)
}
activity_new <- data1[2:17569,]
activity_new <-activity_new[with(activity_new, order(date)),]
activity_new$steps <-as.numeric(activity_new$steps)
levels(as.factor(activity$interval))
View(data)
View(data)
for (i in levels(as.factor(activity$interval))) {
data <- activity[as.factor(activity$interval)==i,]
library(plyr)
fill.missing <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))
dat2 <- sapply(data$steps, function(x){
if(is.numeric(x)){
fill.missing(x)
} else {
x
}
}
)
data2 <- data.frame(dat2)
data1 <- rbind(data1,data2)
}
activity_new <- data1[2:17569,]
activity_new <-activity_new[with(activity_new, order(date)),]
activity_new$steps <-as.numeric(activity_new$steps)
View(data2)
View(data)
for (i in levels(as.factor(activity$interval))) {
data <- activity[as.factor(activity$interval)==i,]
library(plyr)
fill.missing <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))
dat2 <- sapply(data, function(x){
if(is.numeric(x)){
fill.missing(x)
} else {
x
}
}
)
data2 <- data.frame(dat2)
data1 <- rbind(data1,data2)
}
activity_new <- data1[2:17569,]
activity_new <-activity_new[with(activity_new, order(date)),]
activity_new$steps <-as.numeric(activity_new$steps)
